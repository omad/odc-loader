name: release-main

on:
  release:
    types: [published]
    branches: [main]

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      # IMPORTANT: required for trusted publishing to PyPI
      id-token: write
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Get the current tag version
        id: get_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Assert the git tag matches the version in pyproject.toml
        run: |
          tag_version=${{ env.tag }}
          pyproject_version=$(uvx hatch version)

          if [ "$tag_version" != "$pyproject_version" ]; then
            echo "Version mismatch! Git tag version ($tag_version) and pyproject.toml version ($pyproject_version) do not match."
            exit 1
          fi

      - name: Sanity check the version
        run: |
          uvx hatch version

      - name: Build package
        run: |
          git status
          # Run the pyproject-build cli tool from the Python build
          # package, and use the uv installer because it's blazing fast
          uv build
          uvx twine check --strict dist/*
          echo "Listing built artefacts"
          ls dist/*
          echo "Listing sdist contents"
          tar -tzf dist/*.tar.gz
          echo "Listing wheel contents"
          unzip -l dist/*.whl

      # - name: Publish package distributions to PyPI
        # uses: pypa/gh-action-pypi-publish@release/v1
        # This defaults to OIDC identification between GitHub and PyPI

      - name: Increment the version tag, append .dev0, and push a commit to main
        run: |
          git config user.name "Your GitHub Actions Bot"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          uvx hatch version minor,dev
          new_version="$(uvx hatch version)"
          git add src/odc/loader/__init__.py
          git commit -m "Bump version to $new_version"
          git push origin main
